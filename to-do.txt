Ya está el boton de crear jugador y equipo por si lo queréis ir implementando

En la vista es btnAgregarJugador (boton del form que crea un nuevo jugador)
               btnAgregarEquipo (boton del form que crea un nuevo equipo)

Entiendo que desde el controlador capturaréis el evento de click de los mismos y-
los respectivos campos del form para crear el jugador o el equipo en cada caso...

Confirmar: 

Os dejo los ids de cada campo de los formularios para que captureis los datos:

(ids) Creador de Jugador:

 - imp_imagen_jugador
 - imp_nombre_jugador
 - imp_posicion_jugador
 - imp_fecha_nacimiento

(ids) Creador de Equipo:

 - imp_imagen_equipo
 - imp_nombre_equipo
 - imp_ciudad_equipo
 - imp_nombre_estadio

Observación para el controlador:

La imágen se recoje así (o debería de poder recojerse así):
const archivo = document.getElementById("imp_imagen_jugador").files[0];

ya luego te la guardas como tu decidas ya sea como una URL temporal o en base64.


~~~~~~~~~~~~~~~~~ NUEVO ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


ACONTINUACIÓN FUNCIONES DEL CONTROLADOR QUE INTENTO ACCEDER DESDE LA VISTA:

this.controlador.agregarEquipoDesdeVista():  -> Hecho

    Esta función se llama dentro del evento de clic del botón "Crear Equipo" que se genera cuando el usuario está en la sección de "equipos" y abre el modal de creación.

this.controlador.agregarJugadorDesdeVista(): -> Hecho

    Esta función se llama dentro del evento de clic del botón "Crear Jugador" que se genera cuando el usuario está en la sección de "jugadores" y abre el modal de creación.

this.controlador.obtenerJugadores(): -> Hecho

    Esta función se llama dentro de renderizarVista() cuando this.pagina es igual a 'jugador'. Se utiliza para obtener la lista de jugadores que se mostrarán en la interfaz.

this.controlador.obtenerEquipos(): -> Hecho

    Esta función se llama dentro de renderizarVista() cuando this.pagina es igual a 'equipo'. Se utiliza para obtener la lista de equipos que se mostrarán en la interfaz.
    También se llama dentro de mostrarModalJugador() para obtener la lista de todos los equipos disponibles al intentar asignar un equipo a un jugador.

this.controlador.obtenerJugadorPorId(id): -> Hecho

    Esta función se llama dentro de mostrarModalJugador(id) para obtener la información específica de un jugador cuando se hace clic en su tarjeta.

this.controlador.obtenerEquipoPorNombre(nombreEquipo): -> Hecho

    Esta función se llama dentro de mostrarModalJugador(id) para obtener la información del equipo al que pertenece un jugador, si tiene alguno asignado.

this.controlador.eliminarJugador(id):  -> Hecho

    Esta función se llama dentro del evento de clic del botón "Eliminar" que se genera dentro del modal de información de un jugador.

this.controlador.asignarEquipoAJugador(id, nombreSeleccionado): -> Hecho

    Esta función se llama dentro del evento de clic del botón "Asignar equipo" que se genera dentro del modal de información de un jugador, después de que el usuario introduce el nombre del equipo al que se asignará.

this.controlador.obtenerEquipoPorId(id): -> Hecho

    Esta función se llama dentro de mostrarModalEquipo(id) para obtener la información específica de un equipo cuando se hace clic en su tarjeta.

this.controlador.obtenerJugadoresPorEquipo(equipo.getNombre()): -> Hecho

    Esta función se llama dentro de mostrarModalEquipo(id) para obtener la lista de jugadores que están asignados a un equipo específico y mostrarlos en el modal de información del equipo.

===================================================================================================

-Las Cosa
Habria que hacer un seleccionador(un desplegable) de posiciones en la vista despues el modelo comprueba 
que esten dentro de esos valores.

Tener una imagen por defecto si el usuario no ha puesto ningunas.

Estoy añadiendo Booleanos a añadir/eliminar y eso para que el controlador le pase a la vista un mensaje de exito o error
estaria bien una funcion en la vista de mostrarMensaje o algo para esto.


- MAYA -> Acabo de añadir en la vista dos funciones a las que puedes llamar desde el controlador para informar acerca de si ha ocurrido un error o si se ha realizado algo correctamente.

    FUNCIONES DE LA VISTA A LA QUE PUEDES LLAMAR:

     - mostrarError(mensaje); --> Le pasas el mensaje del error a mostrar.

     - mostrarSuccess(mensaje); --> Le pasas el mensaje de success a mostrar.